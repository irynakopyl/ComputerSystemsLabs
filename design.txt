Так уже прийнято, що усі дизайн-патерни поділені на три великі групи, а саме: породжуючі, структурні та поведінкові. Звичайно, що можна було б опустити вступ до кожної із груп, але, насправді, поділ на групи має досить велике значення. Не даремно хлопці із «банди чотирьох» вибрали саме 23 патерни, а не більше і не менше, і недаремно вони поділили їх на ці групи. Це ж було основною метою їхньої роботи – структуризувати та формалізувати вже існуючі дизайн-патерни.
Отже, породжуючі патерни. Основним завданням таких патернів є спростити створення об’єктів.
Інколи ви працюєте із певним набором об’єктів через групу інтерфейсів. А тоді хочете створювати об’єкти тільки із іншого набору, щоб пристосувати ваш код до інших умов. Звичайно, група інтерфейсів, через які ви оперуєте, залишається та ж сама. Спростити створення відповідного набору допоможе Абстрактна Фабрика.
А інколи структура деякого об’єкта дуже складна і залежить від багатьох чинників. Щоб спростити створення такого об’єкту зазвичай використовують Будівельника.
А щоб зручно вибрати одну реалізацію та інстанціювати її, відштовхуючись від простої умови, можна використати Фабричний Метод.
Нерідко постає завдання отримати копію уже існуючого об’єкта, або отримати можливість швидко генерувати багато подібних екземплярів. У такому випадку Прототип якраз згодиться.
Вибагливе множення об’єктів — не єдине завдання, яке вам слід буде виконувати у роботі: вам часто потрібно буде робити все точно навпаки – мати один-єдиний екземпляр об’єкта і, ні за яких обставин, не допустити створення або звертання до ще одного екземпляру. Функціональність єдиного екземпляра забезпечуються Одинаком.